import re
import requests
import time
import json

site = 'http://stankin.ru'
pattern = re.compile(r'href="(?P<http_address>[a-zA-Z0-9:?&=\/.]+)"')


class Porter:
    PERFECTIVEGROUND = re.compile(u"((ив|ивши|ившись|ыв|ывши|ывшись)|((?<=[а€])(в|вши|вшись)))$")
    REFLEXIVE = re.compile(u"(с[€ь])$")
    ADJECTIVE = re.compile(u"(ее|ие|ые|ое|ими|ыми|ей|ий|ый|ой|ем|им|ым|ом|его|ого|ему|ому|их|ых|ую|юю|а€|€€|ою|ею)$")
    PARTICIPLE = re.compile(u"((ивш|ывш|ующ)|((?<=[а€])(ем|нн|вш|ющ|щ)))$")
    VERB = re.compile(
        u"((ила|ыла|ена|ейте|уйте|ите|или|ыли|ей|уй|ил|ыл|им|ым|ен|ило|ыло|ено|€т|ует|уют|ит|ыт|ены|ить|ыть|ишь|ую|ю)|((?<=[а€])(ла|на|ете|йте|ли|й|л|ем|н|ло|но|ет|ют|ны|ть|ешь|нно)))$")
    NOUN = re.compile(
        u"(а|ев|ов|ие|ье|е|и€ми|€ми|ами|еи|ии|и|ией|ей|ой|ий|й|и€м|€м|ием|ем|ам|ом|о|у|ах|и€х|€х|ы|ь|ию|ью|ю|и€|ь€|€)$")
    RVRE = re.compile(u"^(.*?[аеиоуыэю€])(.*)$")
    DERIVATIONAL = re.compile(u".*[^аеиоуыэю€]+[аеиоуыэю€].*ость?$")
    DER = re.compile(u"ость?$")
    SUPERLATIVE = re.compile(u"(ейше|ейш)$")
    I = re.compile(u"и$")
    P = re.compile(u"ь$")
    NN = re.compile(u"нн$")

    def stem(word):

        word = word.lower()
        word = word.replace(u'Є', u'е')
        m = re.match(Porter.RVRE, word)
        if m and m.groups():
            pre = m.group(1)
            rv = m.group(2)
            temp = Porter.PERFECTIVEGROUND.sub('', rv, 1)
            if temp == rv:
                rv = Porter.REFLEXIVE.sub('', rv, 1)
                temp = Porter.ADJECTIVE.sub('', rv, 1)
                if temp != rv:
                    rv = temp
                    rv = Porter.PARTICIPLE.sub('', rv, 1)
                else:
                    temp = Porter.VERB.sub('', rv, 1)
                    if temp == rv:
                        rv = Porter.NOUN.sub('', rv, 1)
                    else:
                        rv = temp
            else:
                rv = temp

            rv = Porter.I.sub('', rv, 1)

            if re.match(Porter.DERIVATIONAL, rv):
                rv = Porter.DER.sub('', rv, 1)

            temp = Porter.P.sub('', rv, 1)
            if temp == rv:
                rv = Porter.SUPERLATIVE.sub('', rv, 1)
                rv = Porter.NN.sub(u'н', rv, 1)
            else:
                rv = temp
            word = pre + rv
        return word

    stem = staticmethod(stem)


def foo(curr_link, depth=1):
    text = requests.get(curr_link).text

    links = pattern.findall(text)
    words = re.search(r'<body[A-Za-z0-9 ="]*>(?P<body>[\s\S]+)</body>', text).groupdict()['body'].split(" ")
    porter = Porter()
    words = [porter.stem(x) for x in words]
    new_links = []
    index = {}
    for link in links:
        if link.startswith('/'):
            new_links.append(site + link)
        elif not link.startswith('/') and not link.startswith('http'):
            new_links.append(curr_link + '/' + link)
        elif link.startswith('http://stankin.ru'):
            new_links.append(link)
    for word in set(words):
        if word not in index:
            index[word] = {}
        index[word][curr_link] = words.count(word)

    if depth - 1 <= 0:
        return index

    for i, link in enumerate(new_links):
        time.sleep(2)
        print('send', link, i, len(new_links), index)
        index.update(foo(link, depth - 1))
        new_links.extend(foo(link, depth - 1))

    return index, new_links


if __name__ == '__main__':
    # print(foo(site), sep='\n')
    print(json.dumps(foo(site), indent=4))
    with open('data.txt', 'w') as outfile:
        outfile.write(json.dumps(foo(site), indent=4))